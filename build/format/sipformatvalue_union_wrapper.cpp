/*
 * Interface wrapper code.
 *
 * Generated by SIP 6.1.1
 */

#include "sipAPIformat.h"

#line 154 "/home/DOMAIN.TEST/administrator/gvdb/policy_bin_reader.sip"
    #include <gvdb-format.h>

    struct value_union_wrapper
    {
        union value_t wrapped_value;
    };
#line 17 "/home/DOMAIN.TEST/administrator/gvdb/build/format/sipformatvalue_union_wrapper.cpp"



/* Call the instance's destructor. */
extern "C" {static void release_value_union_wrapper(void *, int);}
static void release_value_union_wrapper(void *sipCppV, int)
{
    delete reinterpret_cast< ::value_union_wrapper *>(sipCppV);
}


extern "C" {static void *array_value_union_wrapper(Py_ssize_t);}
static void *array_value_union_wrapper(Py_ssize_t sipNrElem)
{
    return new  ::value_union_wrapper[sipNrElem];
}


extern "C" {static void assign_value_union_wrapper(void *, Py_ssize_t, void *);}
static void assign_value_union_wrapper(void *sipDst, Py_ssize_t sipDstIdx, void *sipSrc)
{
    reinterpret_cast< ::value_union_wrapper *>(sipDst)[sipDstIdx] = *reinterpret_cast< ::value_union_wrapper *>(sipSrc);
}


extern "C" {static void *copy_value_union_wrapper(const void *, Py_ssize_t);}
static void *copy_value_union_wrapper(const void *sipSrc, Py_ssize_t sipSrcIdx)
{
    return new  ::value_union_wrapper(reinterpret_cast<const  ::value_union_wrapper *>(sipSrc)[sipSrcIdx]);
}


extern "C" {static void dealloc_value_union_wrapper(sipSimpleWrapper *);}
static void dealloc_value_union_wrapper(sipSimpleWrapper *sipSelf)
{
    if (sipIsOwnedByPython(sipSelf))
    {
        release_value_union_wrapper(sipGetAddress(sipSelf), 0);
    }
}


extern "C" {static void *init_type_value_union_wrapper(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_value_union_wrapper(sipSimpleWrapper *, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
     ::value_union_wrapper *sipCpp = SIP_NULLPTR;

    {
        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, ""))
        {
            sipCpp = new  ::value_union_wrapper();

            return sipCpp;
        }
    }

    {
        const  ::value_union_wrapper* a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, "J9", sipType_value_union_wrapper, &a0))
        {
            sipCpp = new  ::value_union_wrapper(*a0);

            return sipCpp;
        }
    }

    return SIP_NULLPTR;
}


extern "C" {static PyObject *varget_value_union_wrapper_direct(void *, PyObject *, PyObject *);}
static PyObject *varget_value_union_wrapper_direct(void *sipSelf, PyObject *, PyObject *)
{
    PyObject *sipPy;
     ::value_union_wrapper *sipCpp = reinterpret_cast< ::value_union_wrapper *>(sipSelf);

#line 164 "/home/DOMAIN.TEST/administrator/gvdb/policy_bin_reader.sip"
            sipPy = PyUnicode_FromStringAndSize(sipCpp->wrapped_value.direct, 8);
#line 97 "/home/DOMAIN.TEST/administrator/gvdb/build/format/sipformatvalue_union_wrapper.cpp"

    return sipPy;
}


extern "C" {static int varset_value_union_wrapper_direct(void *, PyObject *, PyObject *);}
static int varset_value_union_wrapper_direct(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::value_union_wrapper *sipCpp = reinterpret_cast< ::value_union_wrapper *>(sipSelf);

   int sipErr = 0;

#line 167 "/home/DOMAIN.TEST/administrator/gvdb/policy_bin_reader.sip"
                char *ptr;
                long int length;

                if (PyBytes_AsStringAndSize(sipPy, &ptr, &length) == -1)
                {
                    sipErr = 1;
                }
                else if (length != 8)
                {
                    PyErr_SetString(PyExc_ValueError, "an value.direct must be exactly 8 bytes");
                    sipErr = 1;
                }
                else
                {
                    memcpy(sipCpp->wrapped_value.direct, ptr, 8);
                }
#line 127 "/home/DOMAIN.TEST/administrator/gvdb/build/format/sipformatvalue_union_wrapper.cpp"

    return (sipErr ? -1 : 0);
}


extern "C" {static PyObject *varget_value_union_wrapper_pointer(void *, PyObject *, PyObject *);}
static PyObject *varget_value_union_wrapper_pointer(void *sipSelf, PyObject *, PyObject *)
{
    PyObject *sipPy;
     ::value_union_wrapper *sipCpp = reinterpret_cast< ::value_union_wrapper *>(sipSelf);

#line 189 "/home/DOMAIN.TEST/administrator/gvdb/policy_bin_reader.sip"
            sipPy = sipConvertFromType(sipCpp, sipType_gvdb_pointer, NULL);
#line 141 "/home/DOMAIN.TEST/administrator/gvdb/build/format/sipformatvalue_union_wrapper.cpp"

    return sipPy;
}


extern "C" {static int varset_value_union_wrapper_pointer(void *, PyObject *, PyObject *);}
static int varset_value_union_wrapper_pointer(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::value_union_wrapper *sipCpp = reinterpret_cast< ::value_union_wrapper *>(sipSelf);

   int sipErr = 0;

#line 192 "/home/DOMAIN.TEST/administrator/gvdb/policy_bin_reader.sip"
            sipCpp = reinterpret_cast<value_union_wrapper*>(sipConvertToType(sipPy, sipType_gvdb_pointer, 0, 0, 0, &sipErr));
#line 156 "/home/DOMAIN.TEST/administrator/gvdb/build/format/sipformatvalue_union_wrapper.cpp"

    return (sipErr ? -1 : 0);
}

sipVariableDef variables_value_union_wrapper[] = {
    {InstanceVariable, sipName_direct, (PyMethodDef *)varget_value_union_wrapper_direct, (PyMethodDef *)varset_value_union_wrapper_direct, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_pointer, (PyMethodDef *)varget_value_union_wrapper_pointer, (PyMethodDef *)varset_value_union_wrapper_pointer, SIP_NULLPTR, SIP_NULLPTR},
};

PyDoc_STRVAR(doc_value_union_wrapper, "\1value_union_wrapper()\n"
"value_union_wrapper(value_union_wrapper)");


sipClassTypeDef sipTypeDef_format_value_union_wrapper = {
    {
        SIP_NULLPTR,
        SIP_TYPE_CLASS,
        sipNameNr_value_union_wrapper,
        SIP_NULLPTR,
        SIP_NULLPTR
    },
    {
        sipNameNr_value_union_wrapper,
        {0, 0, 1},
        0, SIP_NULLPTR,
        2, variables_value_union_wrapper,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    doc_value_union_wrapper,
    -1,
    -1,
    SIP_NULLPTR,
    SIP_NULLPTR,
    init_type_value_union_wrapper,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    dealloc_value_union_wrapper,
    assign_value_union_wrapper,
    array_value_union_wrapper,
    copy_value_union_wrapper,
    release_value_union_wrapper,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};
