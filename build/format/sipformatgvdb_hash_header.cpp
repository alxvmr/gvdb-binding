/*
 * Interface wrapper code.
 *
 * Generated by SIP 6.1.1
 */

#include "sipAPIformat.h"

#line 122 "/home/DOMAIN.TEST/administrator/gvdb/policy_bin_reader.sip"
    #include <gvdb-format.h>
#line 12 "/home/DOMAIN.TEST/administrator/gvdb/build/format/sipformatgvdb_hash_header.cpp"

#line 9 "/home/DOMAIN.TEST/administrator/gvdb/policy_bin_reader.sip"
#include <gvdb-format.h>
#line 16 "/home/DOMAIN.TEST/administrator/gvdb/build/format/sipformatgvdb_hash_header.cpp"


/* Call the instance's destructor. */
extern "C" {static void release_gvdb_hash_header(void *, int);}
static void release_gvdb_hash_header(void *sipCppV, int)
{
    delete reinterpret_cast< ::gvdb_hash_header *>(sipCppV);
}


extern "C" {static void *array_gvdb_hash_header(Py_ssize_t);}
static void *array_gvdb_hash_header(Py_ssize_t sipNrElem)
{
    return new  ::gvdb_hash_header[sipNrElem];
}


extern "C" {static void assign_gvdb_hash_header(void *, Py_ssize_t, void *);}
static void assign_gvdb_hash_header(void *sipDst, Py_ssize_t sipDstIdx, void *sipSrc)
{
    reinterpret_cast< ::gvdb_hash_header *>(sipDst)[sipDstIdx] = *reinterpret_cast< ::gvdb_hash_header *>(sipSrc);
}


extern "C" {static void *copy_gvdb_hash_header(const void *, Py_ssize_t);}
static void *copy_gvdb_hash_header(const void *sipSrc, Py_ssize_t sipSrcIdx)
{
    return new  ::gvdb_hash_header(reinterpret_cast<const  ::gvdb_hash_header *>(sipSrc)[sipSrcIdx]);
}


extern "C" {static void dealloc_gvdb_hash_header(sipSimpleWrapper *);}
static void dealloc_gvdb_hash_header(sipSimpleWrapper *sipSelf)
{
    if (sipIsOwnedByPython(sipSelf))
    {
        release_gvdb_hash_header(sipGetAddress(sipSelf), 0);
    }
}


extern "C" {static void *init_type_gvdb_hash_header(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_gvdb_hash_header(sipSimpleWrapper *, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
     ::gvdb_hash_header *sipCpp = SIP_NULLPTR;

    {
        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, ""))
        {
            sipCpp = new  ::gvdb_hash_header();

            return sipCpp;
        }
    }

    {
        const  ::gvdb_hash_header* a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, "J9", sipType_gvdb_hash_header, &a0))
        {
            sipCpp = new  ::gvdb_hash_header(*a0);

            return sipCpp;
        }
    }

    return SIP_NULLPTR;
}


extern "C" {static PyObject *varget_gvdb_hash_header_n_bloom_words(void *, PyObject *, PyObject *);}
static PyObject *varget_gvdb_hash_header_n_bloom_words(void *sipSelf, PyObject *, PyObject *)
{
    PyObject *sipPy;
     ::gvdb_hash_header *sipCpp = reinterpret_cast< ::gvdb_hash_header *>(sipSelf);

#line 128 "/home/DOMAIN.TEST/administrator/gvdb/policy_bin_reader.sip"
            sipPy = PyLong_FromLong(sipCpp->n_bloom_words);
#line 95 "/home/DOMAIN.TEST/administrator/gvdb/build/format/sipformatgvdb_hash_header.cpp"

    return sipPy;
}


extern "C" {static int varset_gvdb_hash_header_n_bloom_words(void *, PyObject *, PyObject *);}
static int varset_gvdb_hash_header_n_bloom_words(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::gvdb_hash_header *sipCpp = reinterpret_cast< ::gvdb_hash_header *>(sipSelf);

   int sipErr = 0;

#line 131 "/home/DOMAIN.TEST/administrator/gvdb/policy_bin_reader.sip"
            if (PyLong_Check(sipPy))
                sipCpp -> n_bloom_words;
            else
                sipErr = 1;
#line 113 "/home/DOMAIN.TEST/administrator/gvdb/build/format/sipformatgvdb_hash_header.cpp"

    return (sipErr ? -1 : 0);
}


extern "C" {static PyObject *varget_gvdb_hash_header_n_buckets(void *, PyObject *, PyObject *);}
static PyObject *varget_gvdb_hash_header_n_buckets(void *sipSelf, PyObject *, PyObject *)
{
    PyObject *sipPy;
     ::gvdb_hash_header *sipCpp = reinterpret_cast< ::gvdb_hash_header *>(sipSelf);

#line 141 "/home/DOMAIN.TEST/administrator/gvdb/policy_bin_reader.sip"
            sipPy = PyLong_FromLong(sipCpp->n_buckets);
#line 127 "/home/DOMAIN.TEST/administrator/gvdb/build/format/sipformatgvdb_hash_header.cpp"

    return sipPy;
}


extern "C" {static int varset_gvdb_hash_header_n_buckets(void *, PyObject *, PyObject *);}
static int varset_gvdb_hash_header_n_buckets(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::gvdb_hash_header *sipCpp = reinterpret_cast< ::gvdb_hash_header *>(sipSelf);

   int sipErr = 0;

#line 144 "/home/DOMAIN.TEST/administrator/gvdb/policy_bin_reader.sip"
            if (PyLong_Check(sipPy))
                sipCpp -> n_buckets;
            else
                sipErr = 1;
#line 145 "/home/DOMAIN.TEST/administrator/gvdb/build/format/sipformatgvdb_hash_header.cpp"

    return (sipErr ? -1 : 0);
}

sipVariableDef variables_gvdb_hash_header[] = {
    {InstanceVariable, sipName_n_bloom_words, (PyMethodDef *)varget_gvdb_hash_header_n_bloom_words, (PyMethodDef *)varset_gvdb_hash_header_n_bloom_words, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_n_buckets, (PyMethodDef *)varget_gvdb_hash_header_n_buckets, (PyMethodDef *)varset_gvdb_hash_header_n_buckets, SIP_NULLPTR, SIP_NULLPTR},
};

PyDoc_STRVAR(doc_gvdb_hash_header, "\1gvdb_hash_header()\n"
"gvdb_hash_header(gvdb_hash_header)");


sipClassTypeDef sipTypeDef_format_gvdb_hash_header = {
    {
        SIP_NULLPTR,
        SIP_TYPE_CLASS,
        sipNameNr_gvdb_hash_header,
        SIP_NULLPTR,
        SIP_NULLPTR
    },
    {
        sipNameNr_gvdb_hash_header,
        {0, 0, 1},
        0, SIP_NULLPTR,
        2, variables_gvdb_hash_header,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    doc_gvdb_hash_header,
    -1,
    -1,
    SIP_NULLPTR,
    SIP_NULLPTR,
    init_type_gvdb_hash_header,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    dealloc_gvdb_hash_header,
    assign_gvdb_hash_header,
    array_gvdb_hash_header,
    copy_gvdb_hash_header,
    release_gvdb_hash_header,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};
